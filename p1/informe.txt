INFORME Práctica 1

Fecha: 21/09/2021
Autores:
Sergio Goyanes Legazpi (sergio.legazpi@udc.es)
Luis Bardanca Rey (luis.bardanca@udc.es)
Manuel Santamariña Ruiz de León (manuel.santamarina@udc.es)
Máquina utilizada:
    CPU: i5 8300H @ 8x 2.3GHz [47.0ºC]
    OS: Ubuntu 21.04 hirsute
    DE: KDE Plasma 5.1
    RAM: 15846MiB
Se ha ejecutado minimizando las interrupciones con todos los programas de usuario cerrados y desde una terminal sin entorno de escritorio.
Unidad utilizada: Microsegundos


Introducción:
En este informe se analizará el rendimiento de dos algoritmos para el cálculo de la suma de la subsecuencia máxima contenida dentro de un vector. El primero emplea dos índices de búsqueda, lo cual es un indicio de que el número de operaciones ejecutadas va a ser teóricamente mucho mayor para tamaños de vector grandes, y el segundo es una implementación más simple en el que el vector solamente se recorre una vez.

Primero ejecutaremos unas funciones test para comprobar que los algoritmos funcionan correctamente y después pasaremos a la medición de tiempos y a la comprobación empírica de la complejidad computacional propuesta.
Salida de los tests y tiempos:
                        sumaSubMax1     sumaSubMax2
[ -9  2 -5 -4  6 ]               6               6
[  4  0  9  2  5 ]              20              20
[ -2 -1 -9 -7 -1 ]               0               0
[  9 -2  1 -7 -8 ]               9               9
[ 15 -2 -5 -4 16 ]              20              20
[  7 -5  6  7 -7 ]              15              15
                               sumaSubMax1     sumaSubMax2
[ -7  3 -6  0 -2  7 -4  9  1 ]          13            13
[ -6 -1  3  1 -5 -1 -6 -8  9 ]           9             9
[  4  2 -3 -3  0  9  0 -6  8 ]          11            11
[ -1 -8  6  5 -9 -1  6  1  3 ]          11            11
[  0  3  0  8  3  8  1 -5 -7 ]          23            23
[  6 -5 -8  2  8  3  5 -8  9 ]          19            19
[  5  2 -7  0  7 -9 -3  2  8 ]          10            10
[  2 -5 -4 -7  5  8  2  3  1 ]          19            19
[  0 -9  5 -1  4  7  0 -4  5 ]          16            16
[ -9  8  7  9  3 -4  9  9 -7 ]          41            41

Suma de la subsecuencia máxima, algoritmo 1
    n             t(n)              n^1.8               n^2             n^2.2
#   500       436.6533467         0.0060533         0.0017466         0.0005040
   1000      1726.0000000         0.0068713         0.0017260         0.0004336
   2000      6874.0000000         0.0078588         0.0017185         0.0003758
   4000     27431.0000000         0.0090060         0.0017144         0.0003264
   8000    109560.0000000         0.0103298         0.0017119         0.0002837
  16000    439118.0000000         0.0118895        *0.0017153         0.0002475
  32000   1756759.0000000         0.0136597        *0.0017156         0.0002155

Cotas sumaSubMax1:
Subestimada: n^1.8
Ajustada: n^2
Sobreestimada:n^2.2

Suma de la subsecuencia máxima, algoritmo 2
    n             t(n)            n^0.8                n^1             n^0.9             n^1.1

#   500         2.8261738         0.0195895         0.0056523        *0.0105227         0.0030362
#  1000         5.0199800         0.0199849         0.0050200        *0.0100162         0.0025159
#  2000         8.9230769         0.0204028         0.0044615         0.0095409         0.0020863
#  4000        16.4965035         0.0216643         0.0041241         0.0094523         0.0017994
#  8000        30.6303696         0.0231036         0.0038288         0.0094053         0.0015587
# 16000        59.4885115         0.0257713         0.0037180         0.0097887         0.0014122
# 32000       114.4715285         0.0284825         0.0035772         0.0100940         0.0012677
# 64000       223.7662338         0.0319779         0.0034963         0.0105738         0.0011561
#128000       440.3116883         0.0361403         0.0034399         0.0111499         0.0010613
 256000       854.0000000         0.0402593         0.0033359         0.0115889         0.0009603
 512000      1713.0000000         0.0463811         0.0033457         0.0124570         0.0008986

Cotas sumaSubMax2:
Subestimada:n^0.8
Ajustada: n^1
Sobreestimada: n^1.1

Tiempos en microsegundos. Los tiempos anómalos se han marcado con *. Se ha promediado el tiempo de K ejecuciones cuando cuando los tiempos registrados eran demasiado pequeños como para considerarse significativos, siendo K 1001.

Conclusión:
El segundo algoritmo es órdenes de magnitud más eficiente que el primero, sea para vectores pequeños o grandes.

Una pecularidad de este estudio es que hemos tenido que aumentar el número de elementos hasta 512000 para comprobar que efectivamente, la cota ajustada del segundo algoritmo de la suma de subsecuencia máxima tiene una complejidad lineal. Con menos elementos podría parecernos que se estabiliza con una cota en torno a "n^0.9", pero sin embargo, al aumentar el número de elementos vemos que en realidad su cota ajustada está más cerca de ser "n".
